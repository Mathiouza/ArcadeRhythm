[gd_scene load_steps=19 format=2]

[ext_resource path="res://Scenes/Titlescreen.tscn" type="PackedScene" id=1]
[ext_resource path="res://Assets/Shaders/OldTV.gdshader" type="Shader" id=2]
[ext_resource path="res://Scenes/Game.tscn" type="PackedScene" id=3]
[ext_resource path="res://Scripts/Application.gd" type="Script" id=4]
[ext_resource path="res://Scenes/GameoverSinglePlayer.tscn" type="PackedScene" id=5]
[ext_resource path="res://Assets/Sprites/Background.png" type="Texture" id=6]
[ext_resource path="res://Scripts/Boot.gd" type="Script" id=7]
[ext_resource path="res://Assets/Splash/Godot.png" type="Texture" id=8]
[ext_resource path="res://Assets/Splash/Controller.png" type="Texture" id=9]
[ext_resource path="res://Assets/Splash/PolygamesLogo.png" type="Texture" id=10]
[ext_resource path="res://Scenes/GameoverTwoPlayer.tscn" type="PackedScene" id=11]

[sub_resource type="ShaderMaterial" id=6]
shader = ExtResource( 2 )
shader_param/curvature = Vector2( 3, 3 )
shader_param/screenResolution = Vector2( 426, 341 )
shader_param/screenOpacity = Vector2( 0.5, 0.5 )
shader_param/time = 11.03
shader_param/brillance = 0.0
shader_param/red = 0.0
shader_param/isWhiteShiny = true

[sub_resource type="Curve" id=9]
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=10]
curve = SubResource( 9 )

[sub_resource type="ParticlesMaterial" id=11]
emission_shape = 2
emission_box_extents = Vector3( 30, 30, 1 )
flag_disable_z = true
direction = Vector3( 0, 0, 0 )
spread = 180.0
gravity = Vector3( 0, 98, 0 )
initial_velocity = 267.33
initial_velocity_random = 1.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
damping = 100.0
scale = 50.0
scale_random = 1.0
scale_curve = SubResource( 10 )

[sub_resource type="Animation" id=7]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("ViewportContainer/Viewport/GameContainer:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:curvature")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 3.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:brillance")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:red")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("ViewportContainer/Viewport/SplashContainer:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:is_white_shiny")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("ViewportContainer/Viewport/GameContainer/Titlescreen:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("ViewportContainer/Viewport/GameContainer/Titlescreen:scale")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 3, 3 ) ]
}

[sub_resource type="Animation" id=12]
resource_name = "Splashscreen"
length = 8.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:curvature")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.210931, 0.459249 ),
"transitions": PoolRealArray( 1, 1, 2.46229 ),
"update": 0,
"values": [ 0.0, 0.0, 3.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:brillance")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.210931, 0.952864 ),
"transitions": PoolRealArray( 1, 1, 0.406126 ),
"update": 0,
"values": [ 1.0, 1.0, 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("ViewportContainer/Viewport/SplashContainer/PolyGamesContainer/PolyGames:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 3.57187, 3.59202 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:red")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1.81593, 3.57118, 4.70307 ),
"transitions": PoolRealArray( 1, 1, 2.21914, 0.31864 ),
"update": 0,
"values": [ 0.0138887, 0.0138887, 1.0, 0.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("ViewportContainer/Viewport/SplashContainer/PolyGamesContainer/Particles2D:emitting")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1.95273, 3.57879 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ false, true, false ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("ViewportContainer/Viewport/SplashContainer/GodotContainer:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 5.81289, 5.92647 ),
"transitions": PoolRealArray( 1, 1, 0.435275 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("ViewportContainer/Viewport/SplashContainer/GodotContainer:scale")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 5.79442, 6.05222 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 4, 4 ), Vector2( 4, 4 ), Vector2( 1, 1 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath(".:is_white_shiny")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=8]
resource_name = "Splashscreen_end"
tracks/0/type = "value"
tracks/0/path = NodePath("ViewportContainer/Viewport/GameContainer:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ViewportContainer/Viewport/SplashContainer:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:is_white_shiny")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("ViewportContainer/Viewport/GameContainer/Titlescreen:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.122383 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("ViewportContainer/Viewport/GameContainer/Titlescreen:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.238867 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 3, 3 ), Vector2( 1, 1 ) ]
}

[node name="Application" type="Control"]
script = ExtResource( 7 )
curvature = 3.0

[node name="ViewportContainer" type="ViewportContainer" parent="."]
material = SubResource( 6 )
margin_right = 1280.0
margin_bottom = 1024.0

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 1280, 1024 )
handle_input_locally = false
hdr = false
disable_3d = true
usage = 0
render_target_update_mode = 3

[node name="SplashContainer" type="Node2D" parent="ViewportContainer/Viewport"]
scale = Vector2( 3, 3 )

[node name="PolyGamesContainer" type="Sprite" parent="ViewportContainer/Viewport/SplashContainer"]
position = Vector2( 213, 170.5 )
texture = ExtResource( 6 )

[node name="Controller" type="Sprite" parent="ViewportContainer/Viewport/SplashContainer/PolyGamesContainer"]
texture = ExtResource( 9 )

[node name="PolyGames" type="Sprite" parent="ViewportContainer/Viewport/SplashContainer/PolyGamesContainer"]
texture = ExtResource( 10 )

[node name="Particles2D" type="Particles2D" parent="ViewportContainer/Viewport/SplashContainer/PolyGamesContainer"]
emitting = false
amount = 500
explosiveness = 0.23
process_material = SubResource( 11 )

[node name="GodotContainer" type="Sprite" parent="ViewportContainer/Viewport/SplashContainer"]
position = Vector2( 213, 170.5 )
texture = ExtResource( 6 )

[node name="Controller" type="Sprite" parent="ViewportContainer/Viewport/SplashContainer/GodotContainer"]
texture = ExtResource( 8 )

[node name="GameContainer" type="Node2D" parent="ViewportContainer/Viewport"]
visible = false
scale = Vector2( 3, 3 )
script = ExtResource( 4 )

[node name="Titlescreen" parent="ViewportContainer/Viewport/GameContainer" instance=ExtResource( 1 )]
modulate = Color( 1, 1, 1, 0 )
scale = Vector2( 3, 3 )

[node name="Game" parent="ViewportContainer/Viewport/GameContainer" instance=ExtResource( 3 )]
visible = false

[node name="GameoverSinglePlayer" parent="ViewportContainer/Viewport/GameContainer" instance=ExtResource( 5 )]
visible = false

[node name="GameoverTwoPlayer" parent="ViewportContainer/Viewport/GameContainer" instance=ExtResource( 11 )]
visible = false

[node name="Timer" type="Timer" parent="ViewportContainer/Viewport/GameContainer"]
wait_time = 5.0
one_shot = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 7 )
anims/Splashscreen = SubResource( 12 )
anims/Splashscreen_end = SubResource( 8 )

[connection signal="start_game" from="ViewportContainer/Viewport/GameContainer/Titlescreen" to="ViewportContainer/Viewport/GameContainer" method="_on_Titlescreen_start_game"]
[connection signal="gameover_single" from="ViewportContainer/Viewport/GameContainer/Game" to="ViewportContainer/Viewport/GameContainer" method="_on_Game_gameover_single"]
[connection signal="gameover_two" from="ViewportContainer/Viewport/GameContainer/Game" to="ViewportContainer/Viewport/GameContainer" method="_on_Game_gameover_two"]
[connection signal="get_out" from="ViewportContainer/Viewport/GameContainer/GameoverSinglePlayer" to="ViewportContainer/Viewport/GameContainer" method="_on_GameoverSinglePlayer_get_out"]
[connection signal="timeout" from="ViewportContainer/Viewport/GameContainer/Timer" to="ViewportContainer/Viewport/GameContainer" method="_on_Timer_timeout"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
